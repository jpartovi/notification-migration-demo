version: '3.8'

services:
  notification-service:
    build: .
    ports:
      - "3004:3000"
    environment:
      - NODE_ENV=development
      - PORT=3000
      - DATABASE_URL=sqlite:./data/notifications.db
      - REDIS_URL=redis://redis:6379
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    depends_on:
      - redis
    networks:
      - notification-network
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - notification-network
    restart: unless-stopped
    command: redis-server --appendonly yes

  # Optional: PostgreSQL database for production use
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: notifications
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - notification-network
    restart: unless-stopped

  # Optional: Monitoring with basic health check dashboard
  health-dashboard:
    image: nginx:alpine
    ports:
      - "8080:80"
    volumes:
      - ./monitoring/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./monitoring/html:/usr/share/nginx/html:ro
    depends_on:
      - notification-service
    networks:
      - notification-network
    restart: unless-stopped

volumes:
  redis-data:
  postgres-data:

networks:
  notification-network:
    driver: bridge
